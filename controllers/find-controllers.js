const pool = require('../settings/db')
const config = require('config')
const {check, validationResult} = require("express-validator");

class FindControllers {
    async findCollocuters(req, res) {
        const user_query = req.params.user_query
        console.log('–ó–∞–ø—Ä–æ—Å1:',user_query)

        try {
        // –≤ —Å–ª—É—á–∞–µ –Ω–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –ø—Ä–æ–±–µ–ª–ª—ã –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        const errors = validationResult(req)
            console.log(errors)
        if (!errors.isEmpty()) {
            return res.status(400).json({
                errors: errors.array(),
                massage: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥',
            })
        }

        pool.query(
            `SELECT ??, ?? FROM ?? WHERE ??.?? LIKE ?`,
            [config.get('fieldOneTableOne'),
                config.get('fieldFourTableOne'),
                config.get('tableOne'),
                config.get('tableOne'),
                config.get('fieldFourTableOne'), '%'+ user_query + '%']
        ).then((data) => {

            if (!data[0][0]) {
                return res.status(405).json({ massage: " –°–æ–≤–ø–∞–¥–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ!!! "})
            } else {
                console.log('üì¢ [auth.routes.js:85]', data[0]);
                res.status(200).json( {data: data[0], massage: `–ù–∞–π–¥–µ–Ω–æ ${data[0].length}`})}
        })
    } catch (error) {
        console.log('üì¢', error, '–ó–∞–ø—Ä–æ—Å –Ω–µ —É–¥–∞–ª—Å—è')
    }
    };

    async findAllCollocuters(req, res) {
        const user = req.query
        console.log('–ó–∞–ø—Ä–æ—Å2:', user)

        try {
            // –≤ —Å–ª—É—á–∞–µ –Ω–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –ø—Ä–æ–±–µ–ª–ª—ã –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ


        } catch (error) {
            console.log('üì¢', error, '–ó–∞–ø—Ä–æ—Å –Ω–µ —É–¥–∞–ª—Å—è')
        }
    }

}




module.exports = new FindControllers